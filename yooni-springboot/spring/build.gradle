plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
// 	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'yooni'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

def generated = "build/generated/querydsl"

sourceSets {
	main.java.srcDirs = [
			'src/main/java',              // 메인 애플리케이션 진입점
			'week5/spring/src/main/java', // 도메인 & 리포지토리 위치
			generated                     // Q 클래스 생성 위치
	]
}



tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// DB
	implementation 'mysql:mysql-connector-java:8.0.33'

	// Hibernate (Spring Boot 3에 맞는 6.0.2만 유지)
	implementation 'org.hibernate.orm:hibernate-core:6.0.2.Final'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	implementation "com.querydsl:querydsl-core:5.0.0"

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	// JSON
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'

	// Swagger / OpenAPI
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.9'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.hibernate.validator:hibernate-validator'

}

tasks.register("generateQueryDSL", JavaCompile) {
	group = "build"
	description = "Generate QueryDSL Q-classes"
	source = sourceSets.main.java
	classpath = sourceSets.main.compileClasspath
	destinationDirectory = file(generated)

	options.annotationProcessorPath = configurations.querydsl
	options.compilerArgs += [
			"-proc:only",
			"-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
	]
}

tasks.named('test') {
	useJUnitPlatform()
}